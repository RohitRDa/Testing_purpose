### Approach 1: Using List Concatenation
##
##def add_element(orginal_list,first_element,last_element):
##    return [first_element]+orginal_list+[last_element]
##
##lst=[2,3,4]
##element1=1
##element2=5
##result=add_element(lst,element1,element2)
##print("This is correct anser",result[::-1])
##
##
### Approach 2: Using List Slicing

##def add_element_scling(orginal_list,first_element,last_element):
##    new_lst=[first_element]
##    new_lst+=orginal_list[:]
##    new_lst+=[last_element]
##
##    return new_lst
##
##lst=[2,3,4]
##element1=1
##element2=5
##result=add_element_scling(lst,element1,element2)
##print(result)

#o add an element in the middle of a list using an inbuilt method, you can utilize list concatenation along with the slice method

##def add_middle(orginal_list,middle_element):
##    middle_index=len(orginal_list) //2
##    new_list=orginal_list[:middle_index]+[middle_element]+orginal_list[middle_index:]
##    return new_list
##
##lst=[2,3,4,5]
##middle=9
##result=add_middle(lst,middle)
##print(result)

#o add an element in the middle of a list using an inbuilt method, you can utilize list concatenation along with the slice method

##def add_middle_element(lst,middle_ele):
##    middle_index=len(lst) //2
##    lst.insert(middle_index,middle_ele)
##    return lst
##lst1=[2,3,4,5]
##element=9
##result=add_middle_element(lst1,element)
##print(result)


#To find the common elements in two given lists

##def common_elemnet(list1,list2):
##    return list(set(list1) & set(list2))
##
##lista=[1,2,3,4,5]
##listb=[6,7,8,5,1]
##result=common_elemnet(lista,listb)
##print("this correct answer",result)


#To find the common elements in two given lists

##def comman_number(lista,listb):
##    commoan_element=[]
##
##    for i in lista:
##        for j in listb:
##            if i==j:
##                if  i not in commoan_element:
##                    commoan_element.append(i)
##    return commoan_element
##
##list1=[10,2,3,4,5,1,'a']
##list2=[6,7,8,5,1,4,10,'a']
##result=comman_number(list1,list2)
##print("this correct answer",result)

# sorted the given list

##def sort_list(list1):
##
##    n=len(list1)
##
##    for i in range(n):
##
##        for j in range(0,n-i-1):
##            if list1[j]>list1[j+1]:
##                list1[j],list1[j+1]=list1[j+1],list1[j]
##
##    return list1
##
##lista=[44,55,2,7,1,100]
##result=sort_list(lista)
##print("this is sorted is : ",result)

def unsort(list1):
    return sorted(list1)


lista=[44,55,2,7,1,100]
result=unsort(lista)
print("this is sorted is : ",result)


/////////////////////////////////////////////////

def process_list(lst):
    element_count = {}
    duplicates = []

    # Count occurrences of each element
    for element in lst:
        if element in element_count:
            element_count[element] += 1
        else:
            element_count[element] = 1

    # Identify duplicates and print their counts
    for element, count in element_count.items():
        if count > 1:
            duplicates.append((element, count))
            print(f"Element '{element}' occurs {count} times")

    # Create a new list with duplicates removed
    new_list = list(element_count.keys())

    print(f"New list after removing duplicates: {new_list}")
    return new_list

# Example usage:
original_list = [64, 34, 25, 12, 22, 11, 90, 64, 25, 25, 12]
new_list = process_list(original_list)
